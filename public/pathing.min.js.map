{
  "version": 3,
  "sources": ["../src/send/index.ts", "../src/core/config.ts", "../src/core/parameter.ts", "../src/core/device-info.ts", "../src/core/api.ts", "../src/send/purchase.ts", "../src/send/playback.ts", "../src/send/button.ts", "../src/link/index.ts", "../src/link/purchase.ts", "../src/link/playback.ts", "../src/link/button.ts", "../src/send/raw.ts", "../src/link/raw.ts", "../src/core/init.ts", "../package.json", "../src/index.ts"],
  "sourcesContent": ["export { purchase } from \"./purchase\";\nexport { playback } from \"./playback\";\nexport { button } from \"./button\";\n", "export const config = {\n    publicKey: null as string | null,\n    verificationError: false,\n};\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nexport class Parameter {\n    constructor(public label: string, public key: string, public value: any) {}\n\n    static unwrap(obj: Record<string, any>) {\n        const flat: Record<string, any> = {};\n        for (const [k, v] of Object.entries(obj)) {\n            flat[k] = v instanceof Parameter ? v.value : v;\n        }\n        return flat;\n    }\n\n    static metadata(obj: Record<string, any>) {\n        const meta: Record<string, { label: string; key: string }> = {};\n        for (const [k, v] of Object.entries(obj)) {\n            if (v instanceof Parameter) {\n                meta[k] = { label: v.label, key: v.key };\n            }\n        }\n        return meta;\n    }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Utility to collect detailed device, browser, and environment information\n * for enhanced analytics tracking\n */\nexport const DeviceInfo = {\n    /**\n     * Get detailed browser information\n     */\n    getBrowserInfo(): Record<string, any> {\n        if (typeof window === \"undefined\" || typeof navigator === \"undefined\") {\n            return {};\n        }\n\n        return {\n            userAgent: navigator.userAgent,\n            language: navigator.language,\n            languages: Array.from(navigator.languages || []),\n            cookieEnabled: navigator.cookieEnabled,\n            doNotTrack:\n                navigator.doNotTrack ||\n                (navigator as any).doNotTrack ||\n                (window as any).doNotTrack,\n            vendor: navigator.vendor,\n            platform: navigator.platform,\n            screenWidth: window.screen.width,\n            screenHeight: window.screen.height,\n            screenColorDepth: window.screen.colorDepth,\n            screenPixelDepth: window.screen.pixelDepth,\n            innerWidth: window.innerWidth,\n            innerHeight: window.innerHeight,\n            devicePixelRatio: window.devicePixelRatio,\n            orientation:\n                typeof window.screen.orientation === \"object\"\n                    ? window.screen.orientation.type\n                    : \"unknown\",\n        };\n    },\n\n    /**\n     * Get network and connection information when available\n     */\n    getConnectionInfo(): Record<string, any> {\n        if (\n            typeof navigator === \"undefined\" ||\n            !(navigator as any).connection\n        ) {\n            return {};\n        }\n\n        const conn = (navigator as any).connection;\n\n        return {\n            effectiveType: conn.effectiveType,\n            downlink: conn.downlink,\n            rtt: conn.rtt,\n            saveData: conn.saveData,\n        };\n    },\n\n    /**\n     * Get performance and timing information\n     */\n    getPerformanceInfo(): Record<string, any> {\n        if (typeof window === \"undefined\" || !window.performance) {\n            return {};\n        }\n\n        // Try to get navigation timing data\n        let timing: Record<string, any> = {};\n\n        if (window.performance.timing) {\n            const t = window.performance.timing;\n            timing = {\n                connectEnd: t.connectEnd,\n                connectStart: t.connectStart,\n                domComplete: t.domComplete,\n                domContentLoadedEventEnd: t.domContentLoadedEventEnd,\n                domContentLoadedEventStart: t.domContentLoadedEventStart,\n                domInteractive: t.domInteractive,\n                domLoading: t.domLoading,\n                domainLookupEnd: t.domainLookupEnd,\n                domainLookupStart: t.domainLookupStart,\n                fetchStart: t.fetchStart,\n                loadEventEnd: t.loadEventEnd,\n                loadEventStart: t.loadEventStart,\n                navigationStart: t.navigationStart,\n                redirectEnd: t.redirectEnd,\n                redirectStart: t.redirectStart,\n                requestStart: t.requestStart,\n                responseEnd: t.responseEnd,\n                responseStart: t.responseStart,\n                unloadEventEnd: t.unloadEventEnd,\n                unloadEventStart: t.unloadEventStart,\n            };\n        }\n\n        return {\n            timing,\n            memory: (window.performance as any).memory\n                ? {\n                      jsHeapSizeLimit: (window.performance as any).memory\n                          .jsHeapSizeLimit,\n                      totalJSHeapSize: (window.performance as any).memory\n                          .totalJSHeapSize,\n                      usedJSHeapSize: (window.performance as any).memory\n                          .usedJSHeapSize,\n                  }\n                : {},\n        };\n    },\n\n    /**\n     * Get geolocation if available and allowed by the user\n     * This is an async function as it requires permission\n     */\n    getGeolocation(): Promise<Record<string, any>> {\n        return new Promise((resolve) => {\n            if (typeof navigator === \"undefined\" || !navigator.geolocation) {\n                resolve({});\n                return;\n            }\n\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    resolve({\n                        latitude: position.coords.latitude,\n                        longitude: position.coords.longitude,\n                        accuracy: position.coords.accuracy,\n                        altitude: position.coords.altitude,\n                        altitudeAccuracy: position.coords.altitudeAccuracy,\n                        heading: position.coords.heading,\n                        speed: position.coords.speed,\n                        timestamp: position.timestamp,\n                    });\n                },\n                () => {\n                    // If user denies permission or error occurs\n                    resolve({});\n                },\n                {\n                    timeout: 1000,\n                    maximumAge: 60000,\n                }\n            );\n        });\n    },\n\n    /**\n     * Get all available client information\n     */\n    async getAllInfo(): Promise<Record<string, any>> {\n        const browserInfo = this.getBrowserInfo();\n        const connectionInfo = this.getConnectionInfo();\n        const performanceInfo = this.getPerformanceInfo();\n\n        // Don't wait for geolocation as it requires user permission\n        // and might timeout, which would delay event tracking\n        // Instead, include it when/if it becomes available\n\n        return {\n            browser: browserInfo,\n            connection: connectionInfo,\n            performance: performanceInfo,\n            timestamp: Date.now(),\n            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n            timezoneOffset: new Date().getTimezoneOffset(),\n            url: window.location.href,\n            hostname: window.location.hostname,\n            pathname: window.location.pathname,\n            search: window.location.search,\n            hash: window.location.hash,\n            isSecure: window.location.protocol === \"https:\",\n            hasTouchScreen:\n                \"ontouchstart\" in window || navigator.maxTouchPoints > 0,\n            browserFingerprint: createSimpleFingerprint(browserInfo),\n        };\n    },\n};\n\n/**\n * Create a simple browser fingerprint based on available information\n * This is not cryptographically secure but helps identify unique browsers\n */\nfunction createSimpleFingerprint(browserInfo: Record<string, any>): string {\n    // Use a combination of browser parameters to create a simple fingerprint\n    const fingerprintData = [\n        browserInfo.userAgent,\n        browserInfo.language,\n        browserInfo.platform,\n        browserInfo.screenWidth,\n        browserInfo.screenHeight,\n        browserInfo.screenColorDepth,\n        navigator.plugins ? navigator.plugins.length : 0,\n        new Date().getTimezoneOffset(),\n        Intl.DateTimeFormat().resolvedOptions().timeZone,\n    ].join(\"|\");\n\n    // Simple hash function for the fingerprint\n    return hashString(fingerprintData);\n}\n\n/**\n * Simple string hashing function\n */\nfunction hashString(str: string): string {\n    let hash = 0;\n    if (str.length === 0) return hash.toString(16);\n\n    for (let i = 0; i < str.length; i++) {\n        const char = str.charCodeAt(i);\n        hash = (hash << 5) - hash + char;\n        hash = hash & hash; // Convert to 32bit integer\n    }\n\n    return Math.abs(hash).toString(16);\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nexport const runtime = \"nodejs\"; // treat route as traditional node.js instead of edge runtime\nimport { config } from \"./config\";\nimport { Parameter } from \"./parameter\";\nimport { DeviceInfo } from \"./device-info\";\n\nexport async function sendEvent(type: string, payload: Record<string, any>) {\n    if (!config.publicKey) {\n        console.error(\n            \"Pathing: No API key available for tracking events. \" +\n                \"If you're using the npm package, please initialize with your API key: \" +\n                \"pathing.init('your-api-key'). \" +\n                'If running via script tag, make sure to include pathing-api-key=\"pk_[YOUR_API_KEY]\" in your script tag.'\n        );\n        return { success: false, error: \"No API key provided\" };\n    }\n\n    if (config.verificationError) {\n        console.warn(\"Pathing: Domain not verified. Tracking disabled.\");\n        return {\n            success: false,\n            error: \"Domain not verified. Please verify your domain ownership.\",\n        };\n    }\n\n    // Get device and browser information\n    const deviceInfo = await DeviceInfo.getAllInfo();\n\n    // The server-side will capture the IP from the request\n\n    const body = {\n        type,\n        payload: Parameter.unwrap(payload),\n        metadata: Parameter.metadata(payload),\n        deviceInfo, // Add device info to every event\n        sessionInfo: {\n            sessionId: getOrCreateSessionId(),\n            visitCount: incrementVisitCount(),\n            lastSeenAt: getLastSeenTime(),\n            firstSeenAt: getFirstSeenTime(),\n            referrer: document.referrer || null,\n            entryPage: getEntryPage(),\n        },\n    };\n\n    try {\n        const res = await fetch(\"https://www.pathing.cc/api/collect\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"X-Pathing-API-Key\": config.publicKey,\n            },\n            body: JSON.stringify(body),\n        });\n\n        const data = await res.json();\n\n        if (!data.success && data.error?.includes(\"not verified\")) {\n            config.verificationError = true;\n            console.warn(\"Pathing: \" + data.error);\n        }\n\n        // Update last seen time\n        setLastSeenTime();\n\n        return data;\n    } catch (error) {\n        console.error(\"Pathing: Error tracking event\", error);\n        return { success: false, error: \"Failed to track event\" };\n    }\n}\n\n// Session and user identification helpers\nfunction getOrCreateSessionId(): string {\n    const storageKey = \"pathing_session_id\";\n    let sessionId = sessionStorage.getItem(storageKey);\n\n    if (!sessionId) {\n        // Generate a random session ID using current timestamp and a random number\n        sessionId = `${Date.now()}-${Math.random()\n            .toString(36)\n            .substring(2, 15)}`;\n        sessionStorage.setItem(storageKey, sessionId);\n    }\n\n    return sessionId;\n}\n\nfunction incrementVisitCount(): number {\n    const storageKey = \"pathing_visit_count\";\n    let count = parseInt(localStorage.getItem(storageKey) || \"0\", 10);\n    count += 1;\n    localStorage.setItem(storageKey, count.toString());\n    return count;\n}\n\nfunction getLastSeenTime(): number | null {\n    const storageKey = \"pathing_last_seen\";\n    const lastSeen = localStorage.getItem(storageKey);\n    return lastSeen ? parseInt(lastSeen, 10) : null;\n}\n\nfunction setLastSeenTime(): void {\n    const storageKey = \"pathing_last_seen\";\n    localStorage.setItem(storageKey, Date.now().toString());\n}\n\nfunction getFirstSeenTime(): number {\n    const storageKey = \"pathing_first_seen\";\n    let firstSeen = localStorage.getItem(storageKey);\n\n    if (!firstSeen) {\n        firstSeen = Date.now().toString();\n        localStorage.setItem(storageKey, firstSeen);\n    }\n\n    return parseInt(firstSeen, 10);\n}\n\nfunction getEntryPage(): string | null {\n    const storageKey = \"pathing_entry_page\";\n    let entryPage = sessionStorage.getItem(storageKey);\n\n    if (!entryPage) {\n        entryPage = window.location.pathname;\n        sessionStorage.setItem(storageKey, entryPage);\n    }\n\n    return entryPage;\n}\n", "import { sendEvent } from \"../core/api\";\nimport { EventResponse, PurchaseData } from \"../types\";\nimport { Parameter } from \"../core/parameter\";\n\nexport function purchase(data: PurchaseData): Promise<EventResponse> {\n    // Transform required fields into Parameters\n    const payload: Record<string, Parameter | unknown> = {\n        product: new Parameter(\"Product\", \"product\", data.product),\n        price: new Parameter(\"Price\", \"price\", data.price),\n        currency: new Parameter(\"Currency\", \"currency\", data.currency),\n    };\n\n    // Add optional fields\n    if (data.quantity !== undefined) {\n        payload[\"quantity\"] = new Parameter(\n            \"Quantity\",\n            \"quantity\",\n            data.quantity\n        );\n    }\n\n    // Add any extra payload data\n    if (data.extra) {\n        Object.entries(data.extra).forEach(([key, value]) => {\n            payload[key] = value;\n        });\n    }\n\n    return sendEvent(\"purchase\", payload);\n}\n", "import { sendEvent } from \"../core/api\";\nimport { EventResponse, PlaybackData } from \"../types\";\nimport { Parameter } from \"../core/parameter\";\n\nexport function playback(data: PlaybackData): Promise<EventResponse> {\n    // Transform required fields into Parameters\n    const payload: Record<string, Parameter | unknown> = {\n        contentId: new Parameter(\"Content ID\", \"content_id\", data.contentId),\n        timestamp: new Parameter(\"Timestamp\", \"timestamp\", data.timestamp),\n    };\n\n    // Add optional fields\n    if (data.duration !== undefined) {\n        payload[\"duration\"] = new Parameter(\n            \"Duration\",\n            \"duration\",\n            data.duration\n        );\n    }\n\n    if (data.title !== undefined) {\n        payload[\"title\"] = new Parameter(\"Title\", \"title\", data.title);\n    }\n\n    // Add any extra payload data\n    if (data.extra) {\n        Object.entries(data.extra).forEach(([key, value]) => {\n            payload[key] = value;\n        });\n    }\n\n    return sendEvent(\"playback\", payload);\n}\n", "import { sendEvent } from \"../core/api\";\nimport { EventResponse, ButtonData } from \"../types\";\nimport { Parameter } from \"../core/parameter\";\n\nexport function button(data: ButtonData): Promise<EventResponse> {\n    // Transform required fields into Parameters\n    const payload: Record<string, Parameter | unknown> = {\n        buttonId: new Parameter(\"Button ID\", \"button_id\", data.buttonId),\n        location: new Parameter(\"Location\", \"location\", data.location),\n        action: new Parameter(\"Action\", \"action\", data.action),\n    };\n\n    // Add optional fields\n    if (data.buttonText !== undefined) {\n        payload[\"buttonText\"] = new Parameter(\n            \"Button Text\",\n            \"button_text\",\n            data.buttonText\n        );\n    }\n\n    // Add any extra payload data\n    if (data.extra) {\n        Object.entries(data.extra).forEach(([key, value]) => {\n            payload[key] = value;\n        });\n    }\n\n    return sendEvent(\"button\", payload);\n}\n", "export { purchase } from \"./purchase\";\nexport { playback } from \"./playback\";\nexport { button } from \"./button\";\n", "import { PurchaseData, LinkOptions } from \"../types\";\nimport { purchase as sendPurchase } from \"../send/purchase\";\n\nexport function purchase(\n    element: HTMLElement,\n    data: PurchaseData,\n    options: LinkOptions = {}\n) {\n    element.addEventListener(\"click\", (event) => {\n        if (options.preventDefault) {\n            event.preventDefault();\n        }\n        sendPurchase(data);\n    });\n\n    return element;\n}\n", "import { PlaybackData, LinkOptions } from \"../types\";\nimport { playback as sendPlayback } from \"../send/playback\";\n\nexport function playback(\n    element: HTMLElement,\n    data: PlaybackData,\n    options: LinkOptions = {}\n) {\n    element.addEventListener(\"click\", (event) => {\n        if (options.preventDefault) {\n            event.preventDefault();\n        }\n        sendPlayback(data);\n    });\n\n    return element;\n}\n", "import { ButtonData, LinkOptions } from \"../types\";\nimport { button as sendButton } from \"../send/button\";\n\nexport function button(\n    element: HTMLElement,\n    data: ButtonData,\n    options: LinkOptions = {}\n) {\n    element.addEventListener(\"click\", (event) => {\n        if (options.preventDefault) {\n            event.preventDefault();\n        }\n\n        // If buttonText wasn't provided, get it from the element\n        if (!data.buttonText && element.textContent) {\n            data = {\n                ...data,\n                buttonText: element.textContent.trim(),\n            };\n        }\n\n        // If buttonId wasn't provided, try to get it from the element\n        if (!data.buttonId && element.id) {\n            data = {\n                ...data,\n                buttonId: element.id,\n            };\n        } else if (!data.buttonId) {\n            // Generate a simple identifier if no ID is available\n            data = {\n                ...data,\n                buttonId: `btn-${element.tagName.toLowerCase()}-${Date.now()}`,\n            };\n        }\n\n        sendButton(data);\n    });\n\n    return element;\n}\n", "import { sendEvent } from \"../core/api\";\nimport { EventPayload, EventResponse } from \"../types\";\n\nexport function send(type: string, data: EventPayload): Promise<EventResponse> {\n    return sendEvent(type, data);\n}\n", "import { EventPayload, LinkOptions } from \"../types\";\nimport { send } from \"../send/raw\";\n\nexport function link(\n    element: HTMLElement,\n    type: string,\n    data: EventPayload,\n    options: LinkOptions = {}\n) {\n    element.addEventListener(\"click\", (event) => {\n        if (options.preventDefault) {\n            event.preventDefault();\n        }\n        send(type, data);\n    });\n\n    return element;\n}\n", "import { config } from \"./config\";\nimport { sendEvent } from \"./api\";\n\nexport function init(apiKey?: string) {\n    // Check if API key is provided directly to the function\n    if (apiKey) {\n        config.publicKey = apiKey;\n    } else {\n        // Check script tag first\n        const scripts = document.querySelectorAll(\"script[pathing-api-key]\");\n        if (scripts.length > 0) {\n            const publicKey = scripts[0].getAttribute(\"pathing-api-key\");\n            if (publicKey) {\n                config.publicKey = publicKey;\n            }\n        } else {\n            // If no script tag found, check for data attribute\n            const dataKeyElement = document.querySelector(\n                \"[data-pathing-api-key]\"\n            );\n            if (dataKeyElement) {\n                const publicKey = dataKeyElement.getAttribute(\n                    \"data-pathing-api-key\"\n                );\n                if (publicKey) {\n                    config.publicKey = publicKey;\n                }\n            }\n        }\n        // No warning here - we'll check for API key validity when events are sent\n    }\n\n    // Only track pageview if we have a valid API key\n    if (config.publicKey) {\n        // Track initial pageview with enhanced data\n        sendEvent(\"pageview\", {\n            // Basic page info\n            path: window.location.pathname,\n            url: window.location.href,\n            referrer: document.referrer || null,\n            title: document.title,\n\n            // URL components\n            hostname: window.location.hostname,\n            search: window.location.search,\n            hash: window.location.hash,\n            protocol: window.location.protocol,\n\n            // Page metadata\n            metaDescription: getMetaContent(\"description\"),\n            metaKeywords: getMetaContent(\"keywords\"),\n            ogTitle: getMetaProperty(\"og:title\"),\n            ogType: getMetaProperty(\"og:type\"),\n            ogUrl: getMetaProperty(\"og:url\"),\n            ogImage: getMetaProperty(\"og:image\"),\n\n            // Navigation info\n            isNewVisit:\n                !document.referrer ||\n                !document.referrer.includes(window.location.hostname),\n            visitStartTime: Date.now(),\n\n            // Document info\n            characterCount: document.body\n                ? document.body.textContent?.length\n                : null,\n            language: document.documentElement.lang,\n        });\n\n        // Set up listener for page visibility changes\n        if (document.addEventListener) {\n            document.addEventListener(\n                \"visibilitychange\",\n                handleVisibilityChange\n            );\n        }\n\n        // Set up listener for before unload to track session duration\n        window.addEventListener(\"beforeunload\", trackPageDuration);\n    }\n}\n\n// Helper functions for enhanced data collection\nfunction getMetaContent(name: string): string | null {\n    const meta = document.querySelector(`meta[name=\"${name}\"]`);\n    return meta ? meta.getAttribute(\"content\") : null;\n}\n\nfunction getMetaProperty(property: string): string | null {\n    const meta = document.querySelector(`meta[property=\"${property}\"]`);\n    return meta ? meta.getAttribute(\"content\") : null;\n}\n\n// Store page load time to calculate duration\nconst pageLoadTime = Date.now();\n\n// Track visibility changes (when user switches tabs)\nfunction handleVisibilityChange() {\n    if (document.visibilityState === \"hidden\") {\n        // User switched away from the tab\n        sendEvent(\"user_action\", {\n            action: \"tab_blur\",\n            visibleDuration: Date.now() - pageLoadTime,\n            path: window.location.pathname,\n        });\n    } else if (document.visibilityState === \"visible\") {\n        // User returned to the tab\n        sendEvent(\"user_action\", {\n            action: \"tab_focus\",\n            path: window.location.pathname,\n        });\n    }\n}\n\n// Track page duration when user leaves\nfunction trackPageDuration() {\n    sendEvent(\"page_exit\", {\n        path: window.location.pathname,\n        title: document.title,\n        duration: Date.now() - pageLoadTime,\n        scrollDepth: getScrollDepth(),\n    });\n}\n\n// Calculate how far down the page the user scrolled\nfunction getScrollDepth(): number {\n    if (typeof window === \"undefined\" || !document.documentElement) {\n        return 0;\n    }\n\n    const scrollTop =\n        window.pageYOffset ||\n        document.documentElement.scrollTop ||\n        document.body.scrollTop ||\n        0;\n    const scrollHeight = Math.max(\n        document.body.scrollHeight,\n        document.documentElement.scrollHeight,\n        document.body.offsetHeight,\n        document.documentElement.offsetHeight\n    );\n    const clientHeight =\n        document.documentElement.clientHeight || window.innerHeight;\n\n    // Calculate scroll percentage (0 to 1)\n    if (scrollHeight <= clientHeight) {\n        return 1; // The entire page fits in the viewport\n    }\n\n    return Math.min(1, scrollTop / (scrollHeight - clientHeight));\n}\n", "{\n    \"name\": \"pathingjs\",\n    \"version\": \"0.2.12\",\n    \"main\": \"dist/pathing.min.js\",\n    \"module\": \"dist/pathing.esm.js\",\n    \"exports\": {\n        \".\": {\n            \"import\": {\n                \"types\": \"./dist/types/index.d.ts\",\n                \"default\": \"./dist/pathing.esm.js\"\n            },\n            \"require\": {\n                \"types\": \"./dist/types/index.d.ts\",\n                \"default\": \"./dist/pathing.min.js\"\n            }\n        }\n    },\n    \"types\": \"dist/types/index.d.ts\",\n    \"type\": \"module\",\n    \"files\": [\n        \"dist\"\n    ],\n    \"scripts\": {\n        \"build\": \"node build.js && tsc --emitDeclarationOnly --outDir dist/types\",\n        \"copy\": \"cp dist/pathing.{min,esm}.{js,js.map} ../public/ && cp dist/pathing.min.js ../public/pathing.js\",\n        \"sdk\": \"npm run build && npm run copy\",\n        \"push\": \"npm run sdk && npm version patch && npm publish\",\n        \"sandbox\": \"node sandbox.js\"\n    },\n    \"description\": \"Enhanced analytics tracking library with comprehensive device, browser, and engagement data collection\",\n    \"keywords\": [\n        \"analytics\",\n        \"tracking\",\n        \"events\",\n        \"device-detection\",\n        \"performance-monitoring\",\n        \"user-engagement\"\n    ],\n    \"devDependencies\": {\n        \"esbuild\": \"^0.25.3\",\n        \"express\": \"^5.1.0\",\n        \"typescript\": \"^5.0.0\"\n    }\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as send from \"./send\";\nimport * as link from \"./link\";\nimport { send as rawSend } from \"./send/raw\";\nimport { link as rawLink } from \"./link/raw\";\nimport { Parameter } from \"./core/parameter\";\nimport { init } from \"./core/init\";\nimport { version } from \"../package.json\";\n\n// SDK version\nconst SDK_VERSION = version;\n\n// Create the pathing object\nconst pathing = {\n    version: SDK_VERSION,\n    send: {\n        ...send,\n        raw: rawSend,\n    },\n    link: {\n        ...link,\n        raw: rawLink,\n    },\n    Parameter,\n    // Add init function to allow programmatic initialization\n    init,\n    // Backward compatibility with older track method\n    track: (type: string, payload: Record<string, any>) => {\n        console.warn(\n            \"pathing.track() is deprecated. Please use pathing.send.raw() instead.\"\n        );\n        return rawSend(type, payload);\n    },\n};\n\n// Auto-initialize when script is loaded\nif (typeof window !== \"undefined\") {\n    (window as any).pathing = pathing;\n\n    if (document.readyState === \"loading\") {\n        document.addEventListener(\"DOMContentLoaded\", () => init());\n    } else {\n        init();\n    }\n}\n\n// Export the pathing object for ESM imports\nexport { pathing };\n\n// Default export for simpler imports\nexport default pathing;\n"],
  "mappings": "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",
  "names": ["send_exports", "__export", "button", "playback", "purchase", "config", "Parameter", "_Parameter", "label", "key", "value", "obj", "flat", "k", "v", "meta", "DeviceInfo", "conn", "timing", "resolve", "position", "browserInfo", "connectionInfo", "performanceInfo", "createSimpleFingerprint", "fingerprintData", "hashString", "str", "hash", "i", "char", "sendEvent", "type", "payload", "_a", "config", "deviceInfo", "DeviceInfo", "body", "Parameter", "getOrCreateSessionId", "incrementVisitCount", "getLastSeenTime", "getFirstSeenTime", "getEntryPage", "data", "setLastSeenTime", "error", "storageKey", "sessionId", "count", "lastSeen", "firstSeen", "entryPage", "purchase", "data", "payload", "Parameter", "key", "value", "sendEvent", "playback", "data", "payload", "Parameter", "key", "value", "sendEvent", "button", "data", "payload", "Parameter", "key", "value", "sendEvent", "link_exports", "__export", "button", "playback", "purchase", "purchase", "element", "data", "options", "event", "playback", "element", "data", "options", "event", "button", "element", "data", "options", "event", "__spreadProps", "__spreadValues", "send", "type", "data", "sendEvent", "link", "element", "type", "data", "options", "event", "send", "init", "apiKey", "_a", "config", "scripts", "publicKey", "dataKeyElement", "sendEvent", "getMetaContent", "getMetaProperty", "handleVisibilityChange", "trackPageDuration", "name", "meta", "property", "pageLoadTime", "getScrollDepth", "scrollTop", "scrollHeight", "clientHeight", "version", "SDK_VERSION", "version", "pathing", "__spreadProps", "__spreadValues", "send_exports", "send", "link_exports", "link", "Parameter", "init", "type", "payload", "index_default", "pathing"]
}
